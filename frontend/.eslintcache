[{"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\index.js":"1","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\App.js":"2","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\store.js":"3","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Cart.js":"4","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Header.js":"5","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Shipping.js":"6","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Footer.js":"7","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\ConfirmOrder.js":"8","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\Home.js":"9","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\product\\ProductDetails.js":"10","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\OrderSuccess.js":"11","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Register.js":"12","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Profile.js":"13","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\UpdatePassword.js":"14","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Login.js":"15","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\NewPassword.js":"16","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\order\\ListOrders.js":"17","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\order\\OrderDetails.js":"18","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\ForgotPassword.js":"19","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\UpdateProfile.js":"20","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProductsList.js":"21","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Payment.js":"22","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UpdateProduct.js":"23","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\Dashboard.js":"24","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\OrdersList.js":"25","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UsersList.js":"26","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProductReviews.js":"27","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UpdateUser.js":"28","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\NewProduct.js":"29","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProcessOrder.js":"30","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\route\\ProtectedRoute.js":"31","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\productReducers.js":"32","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\userActions.js":"33","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\userReducers.js":"34","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\cartReducers.js":"35","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\orderReducers.js":"36","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\MetaData.js":"37","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\cartActions.js":"38","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Search.js":"39","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\CheckoutSteps.js":"40","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Loader.js":"41","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\product\\Product.js":"42","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\orderActions.js":"43","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\Sidebar.js":"44","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\productActions.js":"45","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\orderConstants.js":"46","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\productConstants.js":"47","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\cartConstants.js":"48","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\userConstants.js":"49","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\review\\ListReviews.js":"50"},{"size":589,"mtime":1615205329000,"results":"51","hashOfConfig":"52"},{"size":4822,"mtime":1671456763102,"results":"53","hashOfConfig":"52"},{"size":1734,"mtime":1615205329000,"results":"54","hashOfConfig":"52"},{"size":4968,"mtime":1672476495218,"results":"55","hashOfConfig":"52"},{"size":3400,"mtime":1672476802245,"results":"56","hashOfConfig":"52"},{"size":4762,"mtime":1615205329000,"results":"57","hashOfConfig":"52"},{"size":344,"mtime":1615205329000,"results":"58","hashOfConfig":"52"},{"size":3754,"mtime":1671451534771,"results":"59","hashOfConfig":"52"},{"size":3462,"mtime":1672474178342,"results":"60","hashOfConfig":"52"},{"size":9646,"mtime":1672475492691,"results":"61","hashOfConfig":"52"},{"size":732,"mtime":1615205329000,"results":"62","hashOfConfig":"52"},{"size":5629,"mtime":1615205329000,"results":"63","hashOfConfig":"52"},{"size":2144,"mtime":1670683184239,"results":"64","hashOfConfig":"52"},{"size":2922,"mtime":1615205329000,"results":"65","hashOfConfig":"52"},{"size":3480,"mtime":1671451341975,"results":"66","hashOfConfig":"52"},{"size":2924,"mtime":1615205329000,"results":"67","hashOfConfig":"52"},{"size":2738,"mtime":1672469608755,"results":"68","hashOfConfig":"52"},{"size":3773,"mtime":1670515472175,"results":"69","hashOfConfig":"52"},{"size":2198,"mtime":1615205329000,"results":"70","hashOfConfig":"52"},{"size":5182,"mtime":1670684815409,"results":"71","hashOfConfig":"52"},{"size":3856,"mtime":1672470446548,"results":"72","hashOfConfig":"52"},{"size":5498,"mtime":1615205329000,"results":"73","hashOfConfig":"52"},{"size":9320,"mtime":1672474169013,"results":"74","hashOfConfig":"52"},{"size":5787,"mtime":1670581501050,"results":"75","hashOfConfig":"52"},{"size":3861,"mtime":1672459243497,"results":"76","hashOfConfig":"52"},{"size":3543,"mtime":1615205329000,"results":"77","hashOfConfig":"52"},{"size":5063,"mtime":1615205329000,"results":"78","hashOfConfig":"52"},{"size":4587,"mtime":1615205329000,"results":"79","hashOfConfig":"52"},{"size":8205,"mtime":1670506752142,"results":"80","hashOfConfig":"52"},{"size":6284,"mtime":1670515342689,"results":"81","hashOfConfig":"52"},{"size":920,"mtime":1670506165478,"results":"82","hashOfConfig":"52"},{"size":6961,"mtime":1615205329000,"results":"83","hashOfConfig":"52"},{"size":7420,"mtime":1615205329000,"results":"84","hashOfConfig":"52"},{"size":6373,"mtime":1615205329000,"results":"85","hashOfConfig":"52"},{"size":1107,"mtime":1615205329000,"results":"86","hashOfConfig":"52"},{"size":4375,"mtime":1615205329000,"results":"87","hashOfConfig":"52"},{"size":229,"mtime":1615205329000,"results":"88","hashOfConfig":"52"},{"size":1093,"mtime":1615205329000,"results":"89","hashOfConfig":"52"},{"size":1013,"mtime":1615205329000,"results":"90","hashOfConfig":"52"},{"size":1844,"mtime":1670856062951,"results":"91","hashOfConfig":"52"},{"size":134,"mtime":1615205329000,"results":"92","hashOfConfig":"52"},{"size":1243,"mtime":1670515472174,"results":"93","hashOfConfig":"52"},{"size":3664,"mtime":1615205329000,"results":"94","hashOfConfig":"52"},{"size":1638,"mtime":1615205329000,"results":"95","hashOfConfig":"52"},{"size":5913,"mtime":1670684137457,"results":"96","hashOfConfig":"52"},{"size":1160,"mtime":1615205329000,"results":"97","hashOfConfig":"52"},{"size":1905,"mtime":1615205329000,"results":"98","hashOfConfig":"52"},{"size":146,"mtime":1615205329000,"results":"99","hashOfConfig":"52"},{"size":2213,"mtime":1615205329000,"results":"100","hashOfConfig":"52"},{"size":714,"mtime":1615205329000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"ity4u7",{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\index.js",[],["214","215"],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\App.js",["216"],"import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\n\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\n\nimport Home from './components/Home'\nimport ProductDetails from './components/product/ProductDetails'\n\n// Cart Imports\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders'\nimport OrderDetails from './components/order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\nimport ForgotPassword from './components/user/ForgotPassword'\nimport NewPassword from './components/user/NewPassword'\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard'\nimport ProductsList from './components/admin/ProductsList'\nimport NewProduct from './components/admin/NewProduct'\nimport UpdateProduct from './components/admin/UpdateProduct'\nimport OrdersList from './components/admin/OrdersList'\nimport ProcessOrder from './components/admin/ProcessOrder'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\nimport ProductReviews from './components/admin/ProductReviews'\n\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport axios from 'axios'\n\n// Payment \nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n        </div>\n\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\store.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Cart.js",["217","218","219"],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Header.js",["220"],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\Home.js",["221","222","223"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData'\nimport Product from './product/Product'\nimport Loader from './layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = ({ match }) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n   // const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    // const categories = [\n    //     'Electronics',\n    //     'Cameras',\n    //     'Laptops',\n    //     'Accessories',\n    //     'Headphones',\n    //     'Food',\n    //     \"Books\",\n    //     'Clothes/Shoes',\n    //     'Beauty/Health',\n    //     'Sports',\n    //     'Outdoor',\n    //     'Home'\n    // ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, rating)); // category\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, rating]) // category\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Buy Best Products Online'} />\n\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n                            {products?.map(product => {\n                                console.log(product)\n                                        return(\n\n                                            <Product key={product._id} product={product} col={3} />\n                                            )\n                                })\n                            } \n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\Login.js",["224","225"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading, user } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    //const redirect = user && user.role === \"admin\" ? '/dashboard' : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect) //shipping goes here\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\order\\ListOrders.js",["226"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        console.log(orders)\n\n        orders.map(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `INR ${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\user\\UpdateProfile.js",["227"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.hasOwnProperty(\"avatar\")? user.avatar.url : '/images/default_avatar.jpg')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProductsList.js",["228"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst ProductsList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Product deleted successfully');\n            history.push('/admin/products');\n            dispatch({ type: DELETE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n        console.log(products)\n        products.map((product) => {\n            data.rows.push({\n                    id: product._id,\n                    name: product.name,\n                    price: `${product.price}`,\n                stock: product.stock,\n                actions: <Fragment>\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n        console.log(products)\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Products'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Products</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\OrdersList.js",["229"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'No of Items',\n                    field: 'numofItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders.map(order => {\n            console.log(order);\n            data.rows.push({\n                id: order._id,\n                numofItems: order.orderItems.length,\n                amount: `INR ${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions: <Fragment>\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Orders</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setOrders()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProductReviews.js",["230"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\NewProduct.js",["231","232"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                {/* <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div> */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\product\\Product.js",["233"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">INR {product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\actions\\productActions.js",["234"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (rating) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\vinee\\OneDrive\\Desktop\\shopit-master\\frontend\\src\\components\\review\\ListReviews.js",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":2,"column":42,"nodeType":"241","messageId":"242","endLine":2,"endColumn":50},{"ruleId":"239","severity":1,"message":"243","line":6,"column":10,"nodeType":"241","messageId":"242","endLine":6,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":46,"column":20,"nodeType":"246","messageId":"247","endLine":46,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":46,"column":46,"nodeType":"246","messageId":"247","endLine":46,"endColumn":48},{"ruleId":"248","severity":1,"message":"249","line":31,"column":29,"nodeType":"250","endLine":31,"endColumn":59},{"ruleId":"239","severity":1,"message":"251","line":15,"column":7,"nodeType":"241","messageId":"242","endLine":15,"endColumn":12},{"ruleId":"239","severity":1,"message":"252","line":20,"column":19,"nodeType":"241","messageId":"242","endLine":20,"endColumn":27},{"ruleId":"239","severity":1,"message":"253","line":22,"column":20,"nodeType":"241","messageId":"242","endLine":22,"endColumn":29},{"ruleId":"239","severity":1,"message":"254","line":19,"column":46,"nodeType":"241","messageId":"242","endLine":19,"endColumn":50},{"ruleId":"255","severity":1,"message":"256","line":36,"column":8,"nodeType":"257","endLine":36,"endColumn":58,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":62,"column":26,"nodeType":"261","messageId":"262","endLine":62,"endColumn":28},{"ruleId":"255","severity":1,"message":"263","line":47,"column":8,"nodeType":"257","endLine":47,"endColumn":52,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"260","line":74,"column":32,"nodeType":"261","messageId":"262","endLine":74,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":73,"column":26,"nodeType":"261","messageId":"262","endLine":73,"endColumn":28},{"ruleId":"239","severity":1,"message":"265","line":5,"column":8,"nodeType":"241","messageId":"242","endLine":5,"endColumn":14},{"ruleId":"239","severity":1,"message":"266","line":16,"column":22,"nodeType":"241","messageId":"242","endLine":16,"endColumn":33},{"ruleId":"239","severity":1,"message":"267","line":22,"column":11,"nodeType":"241","messageId":"242","endLine":22,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":8,"column":17,"nodeType":"250","endLine":11,"endColumn":19},{"ruleId":"239","severity":1,"message":"268","line":30,"column":5,"nodeType":"241","messageId":"242","endLine":30,"endColumn":24},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useAlert' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Range' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setRating' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["271"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["272"],"'Loader' is defined but never used.","'setCategory' is assigned a value but never used.","'categories' is assigned a value but never used.","'DELETE_REVIEW_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"279","text":"280"},[1017,1067],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1381,1425],"[dispatch, alert, error, history, isUpdated, user]"]